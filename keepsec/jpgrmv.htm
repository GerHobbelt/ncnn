<html>
<body>
<style>
img {
	display:none;
}
canvas {
	-webkit-transform: matrix(2,0,0,2,0,0);
	margin: 500px;
}
</style>

</body>
<script>

var outputname;
document.body.style.backgroundColor='#464';
var bsimg=document.createElement('img');
bsimg.onload=mkimgd;
//bsimg.onclick=proc;
document.body.appendChild(bsimg);




var infocanv=document.createElement('canvas');
infocanv.onclick=proc;
document.body.appendChild(infocanv);

var infoz=document.createElement('h2');
document.body.appendChild(infoz);

var canv=document.createElement('canvas');
canv.onclick=dlcanvas;
document.body.appendChild(canv);



function loadimg(sna)
{
	outputname=sna;
	bsimg.src='j/'+sna+'.jpg';

}

const Pr = 0.2126, Pg = 0.7152, Pb = 0.0722;

var defco= null;
var negdefcoG=0;
var thrs=20;

function distEuclidean(curdefco,r,g,b) {
var rd = r-curdefco[0];
var gd = g-curdefco[1];
var bd = b-curdefco[2];

return Math.sqrt(Pr*rd*rd + Pg*gd*gd + Pb*bd*bd) <<0;
}

var bfsmooth=true;
function smtha(ksz)
{
	var krn=7;
	if(ksz)
	{
		krn=ksz;
	}
	else
	{
		if(((bsimgh*bsimgw)>>8)&0xffff8000){krn=11;}
	}

	var krnhaf=krn>>1;
	var vml=10-krnhaf;
	var thrz=(krn*(krn+2))>>1;

	if(bfsmooth)
	{
		bfsmooth=false;
		imgd_undo=ctx.getImageData(0, 0, bsimgw, bsimgh);
	}
	

	var b8=imgd_undo.data;
	var b8dst=imgd.data;
	var tmph=bsimgh-krn;
	var tmpw=bsimgw-krn;
	for(var y=0;y<tmph;y++)
	{
		for(var x=0;x<tmpw;x++)
		{
			var i4=((y+krnhaf)*bsimgw+x+krnhaf)<<2;
			var vlu=b8[i4+3];
			if(vlu>1)
			{
				var kot=0;
				for(var yi=0;yi<krn;yi++)
				{
					for(var xi=0;xi<krn;xi++)
					{
						var i4t=((y+yi)*bsimgw+x+xi)<<2;
						if(b8[i4t+3]<5){kot++;}
					}
				}
				if(kot>2&&kot<thrz){
					vlu-=((kot*vml)>>1);
					if(vlu<2){b8dst[i4+3]=2;}
					else{b8dst[i4+3]=vlu;}
						
				} else{b8dst[i4+3]=b8[i4+3];}
			} else{b8dst[i4+3]=b8[i4+3];}
		}
	}

	ctx.putImageData(imgd, 0, 0);
	dodl(krn);
	
}

function dodl(suffix)
{
var link = document.createElement('a');
link.download = outputname+'_j'+suffix+'.png';
link.href = canv.toDataURL()
link.click();
link.remove();

}

function dlcanvas()
{


canv.onclick=null;
dodl('');

}

var bsimgw=0;
var bsimgh=0;
var infoctx=null;
var ctx=null;
var imgd=null;
var infoimgd =null;

var docot=0;
var imgd_undo=null;
var infoimgd_undo =null;

const bgkos=['#464','#644','#446','#080','#008','#800'];
const idxmlr = new Uint8Array ([ 2 , 1 , 3 ]);

const yxsub= new Int8Array (	[ 0 , -1,0, 1,	1,-1, 1,-1,
			  1 , 0, -1,0,	1, 1,-1,-1]);


var ibgkos=0;

function chgbgkos()
{
	canv.style.backgroundColor=bgkos[ibgkos];
	ibgkos++;
	if(ibgkos==6){ibgkos=0;}

}

setInterval(chgbgkos,1000);

function mkimgd()
{
	bsimgw=bsimg.naturalWidth;
	bsimgh=bsimg.naturalHeight;
	
	canv.width = bsimgw;
	canv.height = bsimgh;
	infocanv.width = bsimgw;
	infocanv.height = bsimgh;
	infoctx = infocanv.getContext("2d");
	ctx = canv.getContext("2d");
	ctx.drawImage(bsimg,0,0);
	

	imgd = ctx.getImageData(0, 0, bsimgw, bsimgh);
	infoctx.putImageData(imgd, 0, 0);
	infoimgd = infoctx.getImageData(0, 0, bsimgw, bsimgh);

	var mgnstr=(bsimgh>>1)+'px '+(50+(bsimgw>>1))+'px';
	canv.style.margin=mgnstr;
	infocanv.style.margin=mgnstr;

}

var imgddata=null;
var infoimgddata=null;



function fpwrkr2(x,y)
{

	//test_chkkot++;
	//test_kalkkot++;

	if(x<0||y<0||x>=bsimgw||y>=bsimgh){return;}

	for(var ss=0;ss<4;ss++){
		var tpy=y+yxsub[ss];
		var tpx=x+yxsub[8+ss];
		var i4=(tpy*bsimgw+tpx)<<2;
		if((imgddata[i4+3]==0xff)&&(distEuclidean(defco,imgddata[i4],imgddata[i4+1],imgddata[i4+2])<thrs))
		{

			infoimgddata[i4]=negdefcoG;
			infoimgddata[i4+1]=defco[1];
			infoimgddata[i4+2]=defco[1];
			imgddata[i4]=defco[0];
			imgddata[i4+1]=defco[1];
			imgddata[i4+2]=defco[2];
			imgddata[i4+3]=0;
			fpwrkr2(tpx,tpy);
		}
		}
}

function fpwrkr(x,y,i4k)
{

	if(x<0||y<0||x>=bsimgw||y>=bsimgh){return;}

	
	
	//test_kalkkot++;

	if(distEuclidean(defco,imgddata[i4k],imgddata[i4k+1],imgddata[i4k+2])<thrs)
	{

		infoimgddata[i4]=negdefcoG;
		infoimgddata[i4+1]=defco[1];
		infoimgddata[i4+2]=defco[1];
		imgddata[i4]=defco[0];
		imgddata[i4+1]=defco[1];
		imgddata[i4+2]=defco[2];
		imgddata[i4+3]=0;

		for(var ss=0;ss<4;ss++){
		var tpy=y+yxsub[ss];
		var tpx=x+yxsub[8+ss];
		var i4=(tpy*bsimgw+tpx)<<2;
		if((imgddata[i4+3]==0xff)&&(distEuclidean(defco,imgddata[i4],imgddata[i4+1],imgddata[i4+2])<thrs))
		{

			infoimgddata[i4]=negdefcoG;
			infoimgddata[i4+1]=defco[1];
			infoimgddata[i4+2]=defco[1];
			imgddata[i4]=defco[0];
			imgddata[i4+1]=defco[1];
			imgddata[i4+2]=defco[2];
			imgddata[i4+3]=0;
			fpwrkr2(tpx,tpy);
		}
		}
	}

	

}

function finalproc()
{

	//test_chkkot=0;
	//test_kalkkot=0;

	imgddata=imgd.data;
	infoimgddata=infoimgd.data;
	for(var y=1;y<bsimgh-1;y++)
	{
		
		for(var x=1;x<bsimgw-1;x++)
		{
			
			//test_chkkot++;
			var cleanX=true;
			var i4=(y*bsimgw+x)<<2;
			if(imgddata[i4+3]==1)
			{
				infoimgddata[i4+2]=negdefcoG;
				for(var ss=0;ss<8;ss++){
				var tpy=y+yxsub[ss];
				var tpx=x+yxsub[8+ss];
				i4=(tpy*bsimgw+tpx)<<2;
				if(imgddata[i4+3]==0xff)
				{
					
					fpwrkr(tpx,tpy,i4);
				}
				}

			}
			
			

		}
		

	}

	ctx.putImageData(imgd, 0, 0);
	infoctx.putImageData(infoimgd, 0, 0);

}



function procpix(b8,infob8,x,y)
{

		var pixcoord=y*bsimgw+x;
		var i4=pixcoord<<2;
		
		var firsttime=false;
		if(!defco)
		{
			defco=new Uint8Array(3);
			firsttime=true;
		}

		var curdefco=new Uint8Array(3);
		var ccode='#';
		for(var i=0;i<3;i++)
		{
			var tst=b8[i4+i];
			if(tst<0x10)
			{
				ccode+='0'+tst.toString(16);
			}
			else
			{
				ccode+=tst.toString(16);
			}
			curdefco[i]=tst;
			if(firsttime){defco[i]=tst;if(i==1){negdefcoG=0xff^tst}}
			
			
			
		}

		
		infoz.style.backgroundColor=ccode;
		infoz.innerText=ccode+'\nR: '+defco[0]+', G: '+defco[1]+', B: '+defco[2];
		
		var dst=0;
		var mx=0;
		var my=0;
		var tmpy=y;
		var tmpx=x;
		var mxpp=0;
		var mxdd=0;

		var mypp=0;
		for(var lpkot=0;lpkot<50;lpkot++)
		{
		mxpp=tmpx;
		mxdd=tmpx;

		mypp=bsimgh;
		//y+,x+
		
		
		
		for(my=tmpy;my<bsimgh;my++)
		{
			mx=tmpx;
			var i4=(my*bsimgw+mx)<<2;

			if(b8[i4+3]==0xff){
			dst=distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2]);
			infob8[i4]=dst;
			infob8[i4+1]=negdefcoG;
			infob8[i4+2]=dst;
			if(dst<thrs)
			{
				b8[i4]=defco[0];
				b8[i4+1]=defco[1];
				b8[i4+2]=defco[2];
				b8[i4+3]=0;
			
			}else {mypp=my;
				//i4=i4-4*bsimgw+3;
				//if(b8[i4]==0){b8[i4]=1;}
				break;}}
			mx++;	//!!!

			var mybsimgw=my*bsimgw;
			mxpp=bsimgw;
			for(;mx<bsimgw;mx++)
			{
				i4=(mybsimgw+mx)<<2;
				if(b8[i4+3]==0xff){
				dst=distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2]);
				infob8[i4]=dst;
				infob8[i4+1]=negdefcoG;
				infob8[i4+2]=dst;
				if(dst<thrs)
				{
					b8[i4]=defco[0];
					b8[i4+1]=defco[1];
					b8[i4+2]=defco[2];
					b8[i4+3]=0;
				} else {mxpp=mx;
				if(b8[i4-1]==0){b8[i4-1]=1;}
					break;}}

			}

			
		}
		
		
		

		//y+,x-
		
		for(my=tmpy;my<bsimgh;my++)
		{
			mx=tmpx-1;
			var i4=(my*bsimgw+mx)<<2;
			if(b8[i4+3]==0xff){
			dst=distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2]);
			infob8[i4]=dst;
			infob8[i4+1]=negdefcoG;
			infob8[i4+2]=dst;
			if(dst<thrs)
			{
				b8[i4]=defco[0];
				b8[i4+1]=defco[1];
				b8[i4+2]=defco[2];
				b8[i4+3]=0;
			
			}else {mypp=my;
				//i4=i4-4*bsimgw+3;
				//if(b8[i4]==0){b8[i4]=1;}
				break;}}
			mx--;	//!!!

			var mybsimgw=my*bsimgw;
			mxdd=0;
			for(;mx>=0;mx--)
			{
				i4=(mybsimgw+mx)<<2;
				if(b8[i4+3]==0xff){
				dst=distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2]);
				infob8[i4]=dst;
				infob8[i4+1]=negdefcoG;
				infob8[i4+2]=dst;
				if(dst<thrs)
				{
					b8[i4]=defco[0];
					b8[i4+1]=defco[1];
					b8[i4+2]=defco[2];
					b8[i4+3]=0;
				} else {mxdd=mx;
					if(b8[i4+7]==0){b8[i4+7]=1;}
					break;}}

			}

			
		}
		
		
		//console.log('(y='+tmpy+', x='+tmpx+') downto');
		//break;
		var jza=(mxpp-mxdd);
		if(jza<2||mypp>=bsimgh){break;}
		else{
			
			tmpy=mypp;
			var tmpybsimgw=tmpy*bsimgw;
			var allzero=true;
			for(var i=0;i<3;i++)
			{
				var ado=(jza*idxmlr[i])>>2;
				if(ado==0){continue;}
				
				var tmptmpx=mxdd+ado;
				var i4=(tmpybsimgw+tmptmpx)<<2;
				
				if(distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2])<thrs)
				{
					allzero=false;
					tmpx=tmptmpx;
					break;
				}
			}
			if(allzero){break;}
			
		}
		//console.log('downto (y='+tmpy+', x='+tmpx+')');

}

tmpy=y-1;
tmpx=x;



for(var lpkot=0;lpkot<50;lpkot++)
{

	mxpp=tmpx;
	mxdd=tmpx;
	mypp=0;
		//y-,x+
		
		for(my=tmpy;my>=0;my--)
		{
			mx=tmpx;
			var i4=(my*bsimgw+mx)<<2;
			if(b8[i4+3]==0xff){
			dst=distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2]);
			infob8[i4]=dst;
			infob8[i4+1]=negdefcoG;
			infob8[i4+2]=dst;
			if(dst<thrs)
			{
				b8[i4]=defco[0];
				b8[i4+1]=defco[1];
				b8[i4+2]=defco[2];
				b8[i4+3]=0;
			
			}else {mypp=my;
				//i4=i4+4*bsimgw+3;
				//if(b8[i4]==0){b8[i4]=1;}

				break;}}
			mx++;	//!!!

			var mybsimgw=my*bsimgw;

			mxpp=bsimgw;
			for(;mx<bsimgw;mx++)
			{
				i4=(mybsimgw+mx)<<2;
				if(b8[i4+3]==0xff){
				dst=distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2]);
				infob8[i4]=dst;
				infob8[i4+1]=negdefcoG;
				infob8[i4+2]=dst;
				if(dst<thrs)
				{
					b8[i4]=defco[0];
					b8[i4+1]=defco[1];
					b8[i4+2]=defco[2];
					b8[i4+3]=0;
				} else {mxpp=mx;
					if(b8[i4-1]==0){b8[i4-1]=1;}
					break;}}

			}

			
		}
		
		

		//y-,x-
		for(my=tmpy;my>=0;my--)
		{
			mx=tmpx-1;
			var i4=(my*bsimgw+mx)<<2;
			if(b8[i4+3]==0xff){
			dst=distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2]);
			infob8[i4]=dst;
			infob8[i4+1]=negdefcoG;
			infob8[i4+2]=dst;
			if(dst<thrs)
			{
				b8[i4]=defco[0];
				b8[i4+1]=defco[1];
				b8[i4+2]=defco[2];
				b8[i4+3]=0;
			
			}else {mypp=my;
				//i4=i4+4*bsimgw+3;
				//if(b8[i4]==0){b8[i4]=1;}

				break;}}
			mx--;	//!!!

			var mybsimgw=my*bsimgw;
			mxdd=0;
			for(;mx>=0;mx--)
			{
				i4=(mybsimgw+mx)<<2;
				if(b8[i4+3]==0xff){
				dst=distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2]);
				infob8[i4]=dst;
				infob8[i4+1]=negdefcoG;
				infob8[i4+2]=dst;
				if(dst<thrs)
				{
					b8[i4]=defco[0];
					b8[i4+1]=defco[1];
					b8[i4+2]=defco[2];
					b8[i4+3]=0;
				} else {mxdd=mx;
					if(b8[i4+7]==0){b8[i4+7]=1;}
					break;}}

			}

			
		}

		
		//console.log('(y='+tmpy+', x='+tmpx+') upto');
		//break;
		var jza=(mxpp-mxdd);
		if(jza<2||mypp<=0){break;}
		else{
			
			tmpy=mypp;
			var tmpybsimgw=tmpy*bsimgw;
			var allzero=true;
			for(var i=0;i<3;i++)
			{
				var ado=(jza*idxmlr[i])>>2;
				if(ado==0){continue;}
				
				var tmptmpx=mxdd+ado;
				var i4=(tmpybsimgw+tmptmpx)<<2;
				
				if(distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2])<thrs)
				{
					allzero=false;
					tmpx=tmptmpx;
					break;
				}
			}

			if(allzero){break;}
			
			
		}
		//console.log('upto (y='+tmpy+', x='+tmpx+')');

}

		/*
		var b8l=b8.length>>2;
		for(var i=0;i<b8l;i++)
		{
			i4=i<<2;
			var dst=distEuclidean(curdefco,b8[i4],b8[i4+1],b8[i4+2]);
			infob8[i4]=dst;
			infob8[i4+1]=dst;
			infob8[i4+2]=dst;
			if(dst<thrs)
			{
				b8[i4]=defco[0];
				b8[i4+1]=defco[1];
				b8[i4+2]=defco[2];
				b8[i4+3]=0;
			}
		}
		*/

}

function undo()
{
	if(docot>10)
	{
	ctx.putImageData(imgd_undo, 0, 0);
	infoctx.putImageData(infoimgd_undo, 0, 0);

	imgd=ctx.getImageData(0, 0, bsimgw, bsimgh);
	infoimgd=infoctx.getImageData(0, 0, bsimgw, bsimgh);

	}
}

function proc(ev)
{

	//console.log(ev.offsetY);
	//return;
	
	bfsmooth=true;
	docot++;
	if(docot>10)
	{
		imgd_undo=ctx.getImageData(0, 0, bsimgw, bsimgh);
		infoimgd_undo=infoctx.getImageData(0, 0, bsimgw, bsimgh);
	}
	
	
	procpix(imgd.data,infoimgd.data,(ev.offsetX<<0),(ev.offsetY<<0));

	ctx.putImageData(imgd, 0, 0);
	infoctx.putImageData(infoimgd, 0, 0);

	

}

function byurl()
{
	var uv=location.href.split('?');
	if(uv.length>1)
	{
		loadimg(uv[1]);
	}

}

byurl();

</script>
</html>